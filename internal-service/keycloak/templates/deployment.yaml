apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ default (include "keycloak.fullname" .) .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: keycloak
          image: "{{ .Values.image.repository }}{{ if .Values.image.tag }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/opt/keycloak/bin/kc.sh"]
          args:
            - "start"
            - "--http-enabled=true"
            - "--hostname-strict={{ .Values.hostnameStrict }}"
            - "--hostname-strict-https={{ .Values.hostnameStrictHttps }}"
            - "--http-relative-path={{ .Values.httpRelativePath }}"
            - "--proxy={{ .Values.proxyMode }}"
            - "--metrics-enabled=true"
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.adminSecretName" . }}
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.adminSecretName" . }}
                  key: KEYCLOAK_ADMIN_PASSWORD
          {{- if .Values.postgresql.enabled }}
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.postgres.secretName" . }}
                  key: username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.postgres.secretName" . }}
                  key: password
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ include "keycloak.postgres.fullname" . }}:{{ .Values.postgresql.service.port }}/{{ (lookup "v1" "Secret" .Release.Namespace (include "keycloak.postgres.secretName" .)).data.database | default (b64enc .Values.postgresql.auth.database) | b64dec }}"
          {{- else if .Values.externalDatabase.enabled }}
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              value: {{ .Values.externalDatabase.user | quote }}
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ .Values.externalDatabase.host }}:{{ .Values.externalDatabase.port }}/{{ .Values.externalDatabase.database }}"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.passwordSecret.name }}
                  key: {{ .Values.externalDatabase.passwordSecret.key }}
          {{- end }}
          {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
      volumes:
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
