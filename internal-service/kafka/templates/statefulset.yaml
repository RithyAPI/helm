apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kafka.fullname" . }}-{{ .Values.headless.name }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: kafka
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: kafka
              containerPort: 9092
            - name: controller
              containerPort: 9093
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094"   # <-- add EXTERNAL
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT"   # <-- add EXTERNAL
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "INTERNAL://$(POD_NAME).{{ include \"kafka.fullname\" . }}-{{ .Values.headless.name }}.$(POD_NAMESPACE).svc.cluster.local:9092,EXTERNAL://$(NODE_IP):9094"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "{{ include "kafka.controllerQuorumVoters" . }}"
            - name: KAFKA_DATA_LOG_DIRS
              value: "/bitnami/kafka/data"
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: "{{ .Values.clusterId }}"
            - name: KAFKA_EXTRA_ARGS
              value: ""
          command:
            - /bin/bash
            - -ec
            - |
              export KAFKA_CFG_NODE_ID=${HOSTNAME##*-}
              exec /opt/bitnami/scripts/kafka/run.sh
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 30
            periodSeconds: 15
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{ .Values.persistence.accessModes | toYaml | nindent 8 }}
        storageClassName: {{- if .Values.persistence.storageClass }} "{{ .Values.persistence.storageClass }}" {{- else }} null {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
