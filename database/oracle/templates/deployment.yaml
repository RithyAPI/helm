apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oracle-db.fullname" . }}
  labels:
    {{- include "oracle-db.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oracle-db.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oracle-db.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 600

      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}

      {{- if and .Values.podSecurityContext .Values.podSecurityContext.enabled }}
      securityContext:
        {{- with .Values.podSecurityContext.fsGroup }}
        fsGroup: {{ . }}
        {{- end }}
        {{- with .Values.podSecurityContext.fsGroupChangePolicy }}
        fsGroupChangePolicy: {{ . | quote }}
        {{- end }}
      {{- end }}

      containers:
        - name: oracle
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          ports:
            - containerPort: 1521
              name: tcp-1521

          env:
            - name: ORACLE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.existingSecretName }}{{ .Values.existingSecretName }}{{ else }}{{ include "oracle-db.fullname" . }}-credentials{{ end }}
                  key: ORACLE_PASSWORD
            - name: ORACLE_DATABASE
              value: {{ .Values.env.ORACLE_DATABASE | quote }}
            {{- if .Values.env.ORACLE_CHARACTERSET }}
            - name: ORACLE_CHARACTERSET
              value: {{ .Values.env.ORACLE_CHARACTERSET | quote }}
            {{- end }}
            {{- if .Values.env.APP_USER }}
            - name: APP_USER
              value: {{ .Values.env.APP_USER | quote }}
            - name: APP_USER_PASSWORD
              value: {{ required "APP_USER_PASSWORD required when APP_USER is set" .Values.env.APP_USER_PASSWORD | quote }}
            {{- end }}

          volumeMounts:
            - name: oradata
              mountPath: /opt/oracle/oradata
            - name: dshm
              mountPath: /dev/shm
            {{- if and .Values.initSql.enabled .Values.initSql.files }}
            - name: init-sql
              mountPath: /container-entrypoint-initdb.d
            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          {{- /* ------ Probes (nil-safe) ------ */}}
          {{- $probes := .Values.probes | default dict -}}
          {{- $startup := (get $probes "startup") | default dict -}}
          {{- $startupEnabled := (default true (get $startup "enabled")) -}}
          {{- $startupPort := (default 1521 (get $startup "tcpPort")) -}}
          {{- $period := (default 15 (get $probes "periodSeconds")) -}}
          {{- $timeout := (default 5 (get $probes "timeoutSeconds")) -}}
          {{- $fail := (default 20 (get $probes "failureThreshold")) -}}
          {{- $readInit := (default 900 (get $probes "readinessInitialDelay")) -}}
          {{- $liveInit := (default 1200 (get $probes "livenessInitialDelay")) -}}
          {{- $startupPeriod := (coalesce (get $startup "periodSeconds") $period 10) -}}
          {{- $startupFail := (default 120 (get $startup "failureThreshold")) -}}
          {{- $startupTimeout := (coalesce (get $startup "timeoutSeconds") $timeout 5) -}}
          {{- $readinessEnabled := (default true (get $probes "readinessEnabled")) -}}
          {{- $livenessEnabled := (default true (get $probes "livenessEnabled")) -}}

          {{- if $startupEnabled }}
          startupProbe:
            tcpSocket:
              port: {{ $startupPort }}
            periodSeconds: {{ $startupPeriod }}
            failureThreshold: {{ $startupFail }}     # ~20 minutes by default
            timeoutSeconds: {{ $startupTimeout }}
          {{- end }}

          {{- if $readinessEnabled }}
          readinessProbe:
            tcpSocket:
              port: {{ $startupPort }}
            initialDelaySeconds: {{ $readInit }}     # 15 minutes default
            periodSeconds: {{ $period }}
            timeoutSeconds: {{ $timeout }}
            failureThreshold: {{ $fail }}
          {{- end }}

          {{- if $livenessEnabled }}
          livenessProbe:
            tcpSocket:
              port: {{ $startupPort }}
            initialDelaySeconds: {{ $liveInit }}      # 20 minutes default
            periodSeconds: {{ $period }}
            timeoutSeconds: {{ $timeout }}
            failureThreshold: {{ $fail }}
          {{- end }}

      volumes:
        - name: oradata
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{ else }}{{ include "oracle-db.fullname" . }}{{ end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        {{- if and .Values.initSql.enabled .Values.initSql.files }}
        - name: init-sql
          configMap:
            name: {{ include "oracle-db.fullname" . }}-init-sql
        {{- end }}
