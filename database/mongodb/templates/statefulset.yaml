apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mongodb.headlessName" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mongodb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "mongodb.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mongo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mongo
              containerPort: {{ .Values.service.port }}
          env:
            {{- if .Values.auth.enabled }}
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "mongodb.fullname" .) .Values.auth.rootUser }}
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "mongodb.fullname" .) .Values.auth.rootPassword }}
                  key: password
          volumeMounts:
            - name: data
              mountPath: /data/db
            {{- if and .Values.init.enabled .Values.auth.enabled }}
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
          readinessProbe:
            exec:
              command: ["sh","-c","mongosh --eval 'db.adminCommand({ ping: 1 })' {{- if .Values.auth.enabled }} -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin {{- end }}"]
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["sh","-c","mongosh --eval 'db.adminCommand({ ping: 1 })' {{- if .Values.auth.enabled }} -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin {{- end }}"]
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if and .Values.init.enabled .Values.auth.enabled }}
      volumes:
        - name: init-scripts
          configMap:
            name: {{ include "mongodb.fullname" . }}-init
            defaultMode: 0755
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mongodb.labels" . | nindent 10 }}
      spec:
        accessModes: {{- toYaml .Values.persistence.accessModes | nindent 8 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
