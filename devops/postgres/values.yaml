replicas: 1
tests:
  enabled: false
image:
  repository: postgres
  tag: "15"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automount: false

service:
  type: ClusterIP
  port: 5432

# PVC used by deployment.yaml
persistence:
  enabled: true
  existingClaim: ""        # leave empty so chart creates <fullname>-data
  size: 10Gi
  accessModes: [ReadWriteOnce]
  storageClass: local-path

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80

# Database bootstrap (standard postgres envs)
postgres:
  db: sonarqube
  user: sonar
  # Password comes from Secret (see templates/secret.yaml)
  existingSecretName: ""        # if you already have a secret, set it and ignore templates/secret.yaml
  existingSecretKey: POSTGRES_PASSWORD

# NGINX TCP mapping (disabled by default)
ingress:
  enabled: false
  nginx:
    namespace: ingress-nginx     # set to your nginx controller namespace
  port: 30432                     # external TCP port exposed by nginx

# Optional: run *.sql/*.sh on first start (files put into /docker-entrypoint-initdb.d)
initdb:
  enabled: true
  scripts: |
    -- Example: extra SQL executed on first boot
    -- GRANT ALL PRIVILEGES ON DATABASE {{ .Values.postgres.db }} TO {{ .Values.postgres.user }};

resources:
  requests:
    cpu: "200m"
    memory: "512Mi"
  limits:
    cpu: "1"
    memory: "2Gi"

securityContext:
  fsGroup: 999       # postgres image uses uid 999
  runAsUser: 999
  runAsGroup: 999
  fsGroupChangePolicy: OnRootMismatch

probes:
  readiness:
    initialDelaySeconds: 10
    periodSeconds: 10
  liveness:
    initialDelaySeconds: 20
    periodSeconds: 10
