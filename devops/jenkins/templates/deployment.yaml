apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-jenkins
  labels:
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: my-jenkins
spec:
  replicas: {{ .Values.replicas | default 1 }}  # RWO PVC -> 1 replica
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins
      app.kubernetes.io/instance: my-jenkins
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jenkins
        app.kubernetes.io/instance: my-jenkins
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1000

      volumes: 
        - name: images-vol
          persistentVolumeClaim: 
            claimName: spring-pvc

      initContainers:
        - name: volume-permissions
          image: busybox:1.36.1
          command: ["sh","-c","chown -R 1000:1000 /var/jenkins_home"]
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home

      containers:
        - name: jenkins
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 8080
            - name: agent
              containerPort: 50000
          readinessProbe:
            httpGet: { path: /login, port: http }
          livenessProbe:
            httpGet: { path: /login, port: http }
          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser | default 1000 }}
            runAsGroup: {{ .Values.securityContext.runAsGroup | default 1000 }}
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
