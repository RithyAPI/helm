apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nameOverride | default "my-jenkins" }}
  labels:
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: {{ .Values.nameOverride | default "my-jenkins" }}
spec:
  replicas: {{ .Values.replicas | default 2 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins
      app.kubernetes.io/instance: {{ .Values.nameOverride | default "my-jenkins" }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jenkins
        app.kubernetes.io/instance: {{ .Values.nameOverride | default "my-jenkins" }}
    spec:
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup | default 1000 }}
        {{- if .Values.securityContext.fsGroupChangePolicy }}
        fsGroupChangePolicy: {{ .Values.securityContext.fsGroupChangePolicy }}
        {{- end }}

      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{- if .Values.persistence.existingClaim -}}
              {{ .Values.persistence.existingClaim }}
            {{- else -}}
              {{ default "jenkins-pvc" .Values.persistence.claimName }}
            {{- end }}
      {{- end }}

      initContainers:
        - name: volume-permissions
          image: {{ .Values.init.image | default "busybox:1.36.1" | quote }}
          command: ["sh","-c","chown -R 1000:1000 /var/jenkins_home || true"]
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/jenkins_home
          {{- end }}

      containers:
        - name: jenkins
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 8080
            - name: agent
              containerPort: 50000

          # Startup probe waits for Jenkins to boot before liveness/readiness kick in
          startupProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds | default 60 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 30 }}

          readinessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 30 }}

          livenessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 20 }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 10 }}

          securityContext:
            runAsUser: {{ .Values.securityContext.runAsUser | default 1000 }}
            runAsGroup: {{ .Values.securityContext.runAsGroup | default 1000 }}

          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/jenkins_home
          {{- end }}

          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
