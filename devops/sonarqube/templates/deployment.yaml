spec:
  template:
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command: ['sh','-c']
          args:
            - |
              echo "Waiting for DB at postgresql-postgresql.default.svc.cluster.local:5432";
              for i in $(seq 1 60); do
                (echo > /dev/tcp/postgresql-postgresql.default.svc.cluster.local/5432) >/dev/null 2>&1 && exit 0
                echo "DB not ready ($i/60)"; sleep 2;
              done
              echo "DB never became ready"; exit 1
      containers:
        - name: sonarqube
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              value: "jdbc:postgresql://postgresql-postgresql.default.svc.cluster.local:5432/sonarqube?sslmode=disable&currentSchema=public"
            - name: SONAR_JDBC_USERNAME
              value: "{{ .Values.postgres.username }}"
            - name: SONAR_JDBC_PASSWORD
              value: "{{ .Values.postgres.password }}"
          readinessProbe:
            httpGet: { path: /, port: 9000 }
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /, port: 9000 }
            initialDelaySeconds: 60
            periodSeconds: 20
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      securityContext:
        fsGroup: 1000
