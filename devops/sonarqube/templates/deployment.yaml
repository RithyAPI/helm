apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarqube.fullname" . }}
  labels:
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarqube
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarqube
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- $sc := .Values.securityContext | default (dict) }}
      securityContext:
        fsGroup: {{ $sc.fsGroup | default 1000 }}
        {{- if $sc.fsGroupChangePolicy }}
        fsGroupChangePolicy: {{ $sc.fsGroupChangePolicy }}
        {{- end }}

      containers:
        - name: sonarqube
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 9000

          env:
            - name: SONAR_JDBC_URL
              value: "jdbc:postgresql://{{ .Values.postgres.host }}:{{ .Values.postgres.port }}/{{ .Values.postgres.database }}?sslmode=disable&currentSchema={{ .Values.postgres.schema | default "public" }}"
            - name: SONAR_JDBC_USERNAME
              value: "{{ .Values.postgres.username }}"
            {{- if .Values.postgresExistingSecret }}
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "pg.secretName" . }}
                  key: {{ default "SONAR_DB_PASSWORD" .Values.postgres.existingSecretKey }}
            {{- else }}
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarqube.fullname" . }}-db
                  key: SONAR_DB_PASSWORD
            {{- end }}

          {{- if .Values.env }}
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- end }}

          {{- $csc := .Values.containerSecurityContext | default (dict) }}
          securityContext:
            runAsUser: {{ $csc.runAsUser | default 1000 }}
            runAsGroup: {{ $csc.runAsGroup | default 1000 }}

          volumeMounts:
            - name: data
              mountPath: /opt/sonarqube/data
            - name: logs
              mountPath: /opt/sonarqube/logs
            - name: extensions
              mountPath: /opt/sonarqube/extensions

      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.dataClaimName | default "sonarqube-data" }}
        - name: logs
          {{- if .Values.persistence.logsClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.logsClaimName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: extensions
          {{- if .Values.persistence.extensionsClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.extensionsClaimName }}
          {{- else }}
          emptyDir: {}
          {{- end }}

