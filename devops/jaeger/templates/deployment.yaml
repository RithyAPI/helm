apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jaeger.fullname" . }}
  labels:
    {{- include "jaeger.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jaeger.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "jaeger.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ if .Values.serviceAccount.create }}{{ include "jaeger.fullname" . }}{{ else }}{{ default "default" .Values.serviceAccount.name }}{{ end }}
      containers:
        - name: jaeger
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 16686  # UI
            - containerPort: 4317   # OTLP gRPC
            - containerPort: 4318   # OTLP HTTP
            - containerPort: 14268  # Jaeger Thrift HTTP
            - containerPort: 14250  # Jaeger gRPC
          args:
            {{- if eq .Values.storage.mode "memory" }}
            - "--memory.max-traces={{ .Values.storage.memoryMaxTraces }}"
            {{- end }}
            {{- if or (eq .Values.storage.mode "badger") .Values.storage.badger.enabled }}
            - "--badger.ephemeral={{ ternary "false" "true" (not .Values.storage.badger.ephemeral) | lower }}"
            - "--badger.directory={{ .Values.storage.badger.dataDir }}"
            - "--badger.index-directory={{ .Values.storage.badger.indexDir }}"
            {{- end }}
            - "--collector.otlp.enabled=true"
          readinessProbe:
            httpGet:
              path: /
              port: 16686
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 16686
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or (eq .Values.storage.mode "badger") .Values.storage.badger.enabled }}
          volumeMounts:
            - name: badger
              mountPath: {{ .Values.storage.badger.dataDir }}
            - name: badger-index
              mountPath: {{ .Values.storage.badger.indexDir }}
          {{- end }}
      {{- if or (eq .Values.storage.mode "badger") .Values.storage.badger.enabled }}
      volumes:
        {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
        - name: badger
          persistentVolumeClaim:
            claimName: {{ include "jaeger.fullname" . }}-badger
        - name: badger-index
          persistentVolumeClaim:
            claimName: {{ include "jaeger.fullname" . }}-badger-index
        {{- else if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: badger
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        - name: badger-index
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        - name: badger
          emptyDir: {}
        - name: badger-index
          emptyDir: {}
        {{- end }}
      {{- end }}
